{
  "language": "English",
  "home": "Home",
  "settings": "System Settings",
  "model_training": "Model Training",
  "model_management": "Model Management",
  "help": "Help",
  "language_switch": "Switch Language",
  "dashboard": {
    "title": "Dashboard",
    "realTimeMonitoring": "Real-time Monitoring",
    "systemOverview": "System Overview",
    "activeTraining": "Active Training",
    "modelPerformance": "Model Performance",
    "resourceUsage": "Resource Usage",
    "trainingProgress": "Training Progress",
    "accuracyMetrics": "Accuracy Metrics",
    "lossMetrics": "Loss Metrics",
    "epochProgress": "Epoch Progress",
    "batchProgress": "Batch Progress",
    "learningRate": "Learning Rate",
    "validationAccuracy": "Validation Accuracy",
    "trainingAccuracy": "Training Accuracy",
    "trainingLoss": "Training Loss",
    "validationLoss": "Validation Loss",
    "cpuUsage": "CPU Usage",
    "memoryUsage": "Memory Usage",
    "gpuUsage": "GPU Usage",
    "diskUsage": "Disk Usage",
    "networkUsage": "Network Usage",
    "activeConnections": "Active Connections",
    "dataThroughput": "Data Throughput",
    "modelStatus": "Model Status",
    "connectionStatus": "Connection Status",
    "trainingStatus": "Training Status",
    "systemHealth": "System Health",
    "performanceMetrics": "Performance Metrics",
    "liveUpdates": "Live Updates"
  },
  "chat": "Chat",
  "voice_input": "Voice Input",
  "send": "Send",
  "clear": "Clear",
  "training": "Training",
  "monitoring": "Monitoring",
  "status": "Status",
  "connected": "Connected",
  "disconnected": "Disconnected",
  "start_training": "Start Training",
  "stop_training": "Stop Training",
  "training_progress": "Training Progress",
  "model_selection": "Model Selection",
  "local_model": "Local Model",
  "external_api": "External API",
  "api_key": "API Key",
  "model_name": "Model Name",
  "test_connection": "Test Connection",
  "connection_success": "Connection Success",
  "connection_failed": "Connection Failed",
  "emotional_analysis": "Emotional Analysis",
  "real_time_data": "Real-time Data",
  "sensor_data": "Sensor Data",
  "vision_data": "Vision Data",
  "audio_data": "Audio Data",
  "system_status": "System Status",
  "cpu_usage": "CPU Usage",
  "memory_usage": "Memory Usage",
  "disk_usage": "Disk Usage",
  "network_status": "Network Status",
  "save": "Save",
  "cancel": "Cancel",
  "confirm": "Confirm",
  "warning": "Warning",
  "error": "Error",
  "success": "Success",
  "info": "Info",
  "loading": "Loading",
  "please_wait": "Please Wait",
  "operation_completed": "Operation Completed",
  "operation_failed": "Operation Failed",
  "retry": "Retry",
  "exit": "Exit",
  "minimize": "Minimize",
  "maximize": "Maximize",
  "restore": "Restore",
  "close": "Close",
  "about": "About",
  "version": "Version",
  "license": "License",
  "documentation": "Documentation",
  "support": "Support",
  "feedback": "Feedback",
  "privacy": "Privacy",
  "terms": "Terms",
  "logout": "Logout",
  "login": "Login",
  "register": "Register",
  "username": "Username",
  "password": "Password",
  "email": "Email",
  "phone": "Phone",
  "address": "Address",
  "website": "Website",
  "description": "Description",
  "details": "Details",
  "summary": "Summary",
  "preview": "Preview",
  "edit": "Edit",
  "delete": "Delete",
  "add": "Add",
  "create": "Create",
  "update": "Update",
  "refresh": "Refresh",
  "search": "Search",
  "filter": "Filter",
  "sort": "Sort",
  "ascending": "Ascending",
  "descending": "Descending",
  "all": "All",
  "none": "None",
  "select_all": "Select All",
  "deselect_all": "Deselect All",
  "apply": "Apply",
  "reset": "Reset",
  "configure": "Configure",
  "customize": "Customize",
  "import": "Import",
  "export": "Export",
  "back": "Back",
  "next": "Next",
  "previous": "Previous",
  "finish": "Finish",
  "continue": "Continue",
  "skip": "Skip",
  "yes": "Yes",
  "no": "No",
  "ok": "OK",
  "agree": "Agree",
  "disagree": "Disagree",
  "accept": "Accept",
  "reject": "Reject",
  "enable": "Enable",
  "disable": "Disable",
  "on": "On",
  "off": "Off",
  "active": "Active",
  "inactive": "Inactive",
  "online": "Online",
  "offline": "Offline",
  "visible": "Visible",
  "hidden": "Hidden",
  "public": "Public",
  "private": "Private",
  "secure": "Secure",
  "insecure": "Insecure",
  "valid": "Valid",
  "invalid": "Invalid",
  "required": "Required",
  "optional": "Optional",
  "default": "Default",
  "custom": "Custom",
  "basic": "Basic",
  "advanced": "Advanced",
  "simple": "Simple",
  "complex": "Complex",
  "easy": "Easy",
  "difficult": "Difficult",
  "fast": "Fast",
  "slow": "Slow",
  "high": "High",
  "low": "Low",
  "medium": "Medium",
  "maximum": "Maximum",
  "minimum": "Minimum",
  "average": "Average",
  "total": "Total",
  "partial": "Partial",
  "complete": "Complete",
  "incomplete": "Incomplete",
  "progress": "Progress",
  "percentage": "Percentage",
  "count": "Count",
  "amount": "Amount",
  "quantity": "Quantity",
  "quality": "Quality",
  "performance": "Performance",
  "efficiency": "Efficiency",
  "accuracy": "Accuracy",
  "precision": "Precision",
  "recall": "Recall",
  "f1_score": "F1 Score",
  "loss": "Loss",
  "epoch": "Epoch",
  "iteration": "Iteration",
  "batch": "Batch",
  "sample": "Sample",
  "feature": "Feature",
  "label": "Label",
  "prediction": "Prediction",
  "validation": "Validation",
  "testing": "Testing",
  "inference": "Inference",
  "deployment": "Deployment",
  "production": "Production",
  "development": "Development",
  "staging": "Staging",
  "debug": "Debug",
  "log": "Log",
  "monitor": "Monitor",
  "analyze": "Analyze",
  "optimize": "Optimize",
  "tune": "Tune",
  "scale": "Scale",
  "migrate": "Migrate",
  "backup": "Backup",
  "restore": "Restore",
  "upgrade": "Upgrade",
  "downgrade": "Downgrade",
  "install": "Install",
  "uninstall": "Uninstall",
  "update": "Update",
  "patch": "Patch",
  "fix": "Fix",
  "bug": "Bug",
  "issue": "Issue",
  "exception": "Exception",
  "crash": "Crash",
  "hang": "Hang",
  "memory_leak": "Memory Leak",
  "performance_issue": "Performance Issue",
  "security_issue": "Security Issue",
  "compatibility_issue": "Compatibility Issue",
  "usability_issue": "Usability Issue",
  "accessibility_issue": "Accessibility Issue",
  "reliability_issue": "Reliability Issue",
  "maintenance": "Maintenance",
  "tutorial": "Tutorial",
  "guide": "Guide",
  "manual": "Manual",
  "reference": "Reference",
  "example": "Example",
  "demo": "Demo",
  "trial": "Trial",
  "free": "Free",
  "paid": "Paid",
  "premium": "Premium",
  "enterprise": "Enterprise",
  "community": "Community",
  "open_source": "Open Source",
  "proprietary": "Proprietary",
  "commercial": "Commercial",
  "non_commercial": "Non Commercial",
  "personal": "Personal",
  "educational": "Educational",
  "research": "Research",
  "api": "API",
  "sdk": "SDK",
  "library": "Library",
  "framework": "Framework",
  "platform": "Platform",
  "service": "Service",
  "application": "Application",
  "system": "System",
  "software": "Software",
  "hardware": "Hardware",
  "network": "Network",
  "cloud": "Cloud",
  "edge": "Edge",
  "iot": "IoT",
  "ai": "AI",
  "ml": "ML",
  "dl": "DL",
  "nlp": "NLP",
  "cv": "CV",
  "audio": "Audio",
  "video": "Video",
  "image": "Image",
  "text": "Text",
  "data": "Data",
  "database": "Database",
  "storage": "Storage",
  "compute": "Compute",
  "memory": "Memory",
  "disk": "Disk",
  "security": "Security",
  "privacy": "Privacy",
  "compliance": "Compliance",
  "regulation": "Regulation",
  "standard": "Standard",
  "protocol": "Protocol",
  "format": "Format",
  "encoding": "Encoding",
  "compression": "Compression",
  "encryption": "Encryption",
  "authentication": "Authentication",
  "authorization": "Authorization",
  "account": "Account",
  "user": "User",
  "group": "Group",
  "role": "Role",
  "permission": "Permission",
  "policy": "Policy",
  "rule": "Rule",
  "condition": "Condition",
  "action": "Action",
  "event": "Event",
  "state": "State",
  "transition": "Transition",
  "process": "Process",
  "thread": "Thread",
  "task": "Task",
  "job": "Job",
  "queue": "Queue",
  "stack": "Stack",
  "heap": "Heap",
  "buffer": "Buffer",
  "cache": "Cache",
  "pool": "Pool",
  "resource": "Resource",
  "allocation": "Allocation",
  "deallocation": "Deallocation",
  "management": "Management",
  "administration": "Administration",
  "operation": "Operation",
  "logging": "Logging",
  "auditing": "Auditing",
  "reporting": "Reporting",
  "analytics": "Analytics",
  "visualization": "Visualization",
  "chart": "Chart",
  "graph": "Graph",
  "table": "Table",
  "list": "List",
  "tree": "Tree",
  "map": "Map",
  "calendar": "Calendar",
  "timeline": "Timeline",
  "notification": "Notification",
  "alert": "Alert",
  "profile": "Profile",
  "benchmark": "Benchmark",
  "test": "Test",
  "validation": "Validation",
  "verification": "Verification",
  "certification": "Certification",
  "accreditation": "Accreditation",
  "audit": "Audit",
  "inspection": "Inspection",
  "review": "Review",
  "approval": "Approval",
  "rejection": "Rejection",
  "acceptance": "Acceptance",
  "completion": "Completion",
  "termination": "Termination",
  "cancellation": "Cancellation",
  "suspension": "Suspension",
  "resumption": "Resumption",
  "extension": "Extension",
  "reduction": "Reduction",
  "increase": "Increase",
  "decrease": "Decrease",
  "change": "Change",
  "conversion": "Conversion",
  "translation": "Translation",
  "rotation": "Rotation",
  "scaling": "Scaling",
  "transformation": "Transformation",
  "projection": "Projection",
  "mapping": "Mapping",
  "function": "Function",
  "method": "Method",
  "procedure": "Procedure",
  "algorithm": "Algorithm",
  "heuristic": "Heuristic",
  "model": "Model",
  "architecture": "Architecture",
  "design": "Design",
  "pattern": "Pattern",
  "template": "Template",
  "blueprint": "Blueprint",
  "specification": "Specification",
  "requirement": "Requirement",
  "constraint": "Constraint",
  "assumption": "Assumption",
  "dependency": "Dependency",
  "interface": "Interface",
  "implementation": "Implementation",
  "integration": "Integration",
  "innovation": "Innovation",
  "improvement": "Improvement",
  "enhancement": "Enhancement",
  "customization": "Customization",
  "configuration": "Configuration",
  "calibration": "Calibration",
  "evaluation": "Evaluation",
  "assessment": "Assessment",
  "measurement": "Measurement",
  "metric": "Metric",
  "kpi": "KPI",
  "goal": "Goal",
  "objective": "Objective",
  "target": "Target",
  "milestone": "Milestone",
  "deadline": "Deadline",
  "schedule": "Schedule",
  "roadmap": "Roadmap",
  "strategy": "Strategy",
  "tactic": "Tactic",
  "plan": "Plan",
  "project": "Project",
  "program": "Program",
  "portfolio": "Portfolio",
  "organization": "Organization",
  "company": "Company",
  "enterprise": "Enterprise",
  "institution": "Institution",
  "government": "Government",
  "non_profit": "Non Profit",
  "community": "Community",
  "team": "Team",
  "department": "Department",
  "division": "Division",
  "unit": "Unit",
  "individual": "Individual",
  "person": "Person",
  "customer": "Customer",
  "client": "Client",
  "partner": "Partner",
  "supplier": "Supplier",
  "vendor": "Vendor",
  "contractor": "Contractor",
  "employee": "Employee",
  "manager": "Manager",
  "director": "Director",
  "executive": "Executive",
  "leader": "Leader",
  "mentor": "M Mentor",
  "teacher": "Teacher",
  "student": "Student",
  "researcher": "Researcher",
  "scientist": "Scientist",
  "engineer": "Engineer",
  "developer": "Developer",
  "designer": "Designer",
  "architect": "Architect",
  "analyst": "Analyst",
  "administrator": "Administrator",
  "operator": "Operator",
  "technician": "Technician",
  "specialist": "Specialist",
  "consultant": "Consultant",
  "advisor": "Advisor",
  "coordinator": "Coordinator",
  "facilitator": "Facilitator",
  "moderator": "Moderator",
  "speaker": "Speaker",
  "author": "Author",
  "editor": "Editor",
  "publisher": "Publisher",
  "manufacturer": "Manufacturer",
  "producer": "Producer",
  "consumer": "Consumer",
  "end_user": "End User",
  "stakeholder": "Stakeholder",
  "shareholder": "Shareholder",
  "investor": "Investor",
  "donor": "Donor",
  "sponsor": "Sponsor",
  "advertiser": "Advertiser",
  "marketer": "Marketer",
  "salesperson": "Salesperson",
  "train": {
    "title": "Model Training",
    "trainingMode": "Training Mode",
    "individual": "Individual Training",
    "joint": "Joint Training",
    "selectModels": "Select Models",
    "recommendedCombinations": "Recommended Combinations",
    "combinations": {
      "basic_interaction": "Basic Interaction",
      "visual_processing": "Visual Processing",
      "sensor_analysis": "Sensor Analysis",
      "complete_system": "Complete System",
      "autonomous_control": "Autonomous Control"
    },
    "requiresModels": "Requires: {models}",
    "missingDependencies": "Missing dependencies: {details}",
    "combinationValid": "Combination is valid",
    "dependencies": "Dependencies",
    "dataset": "Dataset",
    "datasets": {
      "multimodal_v1": "Multimodal Dataset v1",
      "language_only": "Language Only Dataset",
      "vision_only": "Vision Only Dataset",
      "sensor_only": "Sensor Only Dataset"
    },
    "uploadDataset": "Upload Dataset",
    "parameters": "Training Parameters",
    "epochs": "Epochs",
    "batchSize": "Batch Size",
    "learningRate": "Learning Rate",
    "validationSplit": "Validation Split",
    "dropoutRate": "Dropout Rate",
    "weightDecay": "Weight Decay",
    "momentum": "Momentum",
    "optimizer": "Optimizer",
    "trainingStrategy": "Training Strategy",
    "strategies": {
      "standard": "Standard Training",
      "knowledge_assisted": "Knowledge Assisted",
      "progressive": "Progressive Training",
      "adaptive": "Adaptive Training"
    },
    "knowledgeAssistOptions": "Knowledge Assist Options",
    "domainKnowledge": "Domain Knowledge",
    "commonSense": "Common Sense",
    "proceduralKnowledge": "Procedural Knowledge",
    "contextualLearning": "Contextual Learning",
    "knowledgeIntensity": "Knowledge Intensity",
    "startTraining": "Start Training",
    "trainingInProgress": "Training in Progress...",
    "stopTraining": "Stop Training",
    "progress": "Training Progress",
    "logs": "Training Logs",
    "trainingStarted": "Training started: Mode={mode}, Models={models}, Dataset={dataset}",
    "epochCompleted": "Epoch {epoch} completed: Loss={loss}, Accuracy={accuracy}%",
    "trainingCompleted": "Training completed successfully",
    "trainingStopped": "Training stopped",
    "evaluation": "Model Evaluation",
    "accuracy": "Accuracy",
    "loss": "Loss",
    "precision": "Precision",
    "recall": "Recall",
    "confusionMatrix": "Confusion Matrix",
    "history": "Training History",
    "date": "Date",
    "models": "Models",
    "duration": "Duration",
    "actions": "Actions",
    "view": "View",
    "compare": "Compare"
  },
  "models": {
    "manager": "Manager Model",
    "language": "Language Model",
    "audio": "Audio Processing Model",
    "image": "Image Vision Model",
    "vision_image": "Image Vision Model",
    "video": "Video Vision Model",
    "vision_video": "Video Vision Model",
    "spatial": "Spatial Perception Model",
    "sensor": "Sensor Model",
    "computer": "Computer Control Model",
    "motion": "Motion and Actuator Model",
    "knowledge": "Knowledge Expert Model",
    "programming": "Programming Model",
    "planning": "Planning Model",
    "finance": "Finance Model",
    "medical": "Medical Model",
    "prediction": "Prediction Model",
    "vision": "Vision Model",
    "emotion": "Emotion Model",
    "manager_enhanced": "Enhanced Manager Model",
    "stereo_vision": "Stereo Vision Model"
  },
  "help": {
    "title": "Help Center",
    "subtitle": "Comprehensive guide to using the Self Soul  AGI system",
    "searchPlaceholder": "Search help content...",
    "search": "Search",
    "categories": "Categories",
    "resources": "Resources",
    "interactiveTutorial": "Interactive Tutorial",
    "videoGuide": "Video Guide",
    "onlineFeedback": "Online Feedback",
    "loading": "Loading...",
    "lastUpdated": "Last Updated",
    "category": "Category",
    "helpful": "Helpful",
    "notHelpful": "Not Helpful",
    "searchResults": "Search Results",
    "welcome": "Welcome to AGI Brain System Help Center",
    "welcomeMessage": "Here you can find detailed usage instructions, troubleshooting guides, and best practices for the AGI Brain System.",
    "gettingStartedDesc": "Quick start guide and installation instructions",
    "troubleshootingDesc": "Common issue resolution and troubleshooting",
    "faqDesc": "Frequently Asked Questions",
    "featuredArticles": "Featured Articles",
    "tutorialMessage": "Interactive tutorial feature coming soon",
    "videoGuideMessage": "Video guide feature coming soon",
    "feedbackMessage": "Online feedback feature coming soon",
    
    "sections": {
      "introduction": "Introduction",
      "quickstart": "Quick Start",
      "models": "Model Guide",
      "training": "Training Guide",
      "troubleshooting": "Troubleshooting",
      "advanced": "Advanced Features"
    },
    
    "introduction": {
      "content1": "Self Soul  is an advanced AGI system designed to mimic human brain functionality with self-awareness, autonomous learning, and self-improvement capabilities.",
      "content2": "This system integrates multiple specialized AI models that work together to provide comprehensive artificial general intelligence."
    },
    
    "features": {
      "brain": {
        "title": "Brain-like Intelligence",
        "description": "Advanced cognitive abilities with emotional awareness and reasoning capabilities"
      },
      "vision": {
        "title": "Visual Processing",
        "description": "Comprehensive image and video analysis, generation, and editing capabilities"
      },
      "audio": {
        "title": "Audio Intelligence",
        "description": "Speech recognition, music processing, and advanced audio synthesis"
      },
      "knowledge": {
        "title": "Expert Knowledge",
        "description": "Comprehensive knowledge base spanning multiple disciplines and domains"
      }
    },
    
    "quickstart": {
      "step1": {
        "title": "System Setup",
        "description": "Install and configure the Self Soul  system with all required dependencies"
      },
      "step2": {
        "title": "Model Initialization",
        "description": "Initialize all AI models and configure their parameters for optimal performance"
      },
      "step3": {
        "title": "Training Preparation",
        "description": "Prepare training datasets and configure training parameters for each model"
      },
      "step4": {
        "title": "Start Interaction",
        "description": "Begin interacting with the system through the chat interface or voice commands"
      }
    },
    
    "models": {
      "manager": {
        "title": "Manager Model",
        "description": "Coordinates all other models, handles emotional analysis, and manages task distribution",
        "features": {
          "emotion": "Emotion Analysis",
          "coordination": "Model Coordination",
          "communication": "Multi-modal Communication"
        }
      },
      "language": {
        "title": "Language Model",
        "description": "Handles multilingual communication, reasoning, and text generation",
        "features": {
          "multilingual": "Multilingual Support",
          "reasoning": "Advanced Reasoning",
          "generation": "Text Generation"
        }
      },
      "audio": {
        "title": "Audio Model",
        "description": "Processes audio inputs, recognizes speech, and generates synthetic audio",
        "features": {
          "recognition": "Speech Recognition",
          "synthesis": "Audio Synthesis",
          "processing": "Audio Processing"
        }
      },
      "vision": {
        "title": "Vision Model",
        "description": "Analyzes images, recognizes objects, and generates visual content",
        "features": {
          "recognition": "Image Recognition",
          "generation": "Image Generation",
          "editing": "Image Editing"
        }
      },
      "video": {
        "title": "Video Model",
        "description": "Processes video streams, analyzes content, and generates video output",
        "features": {
          "analysis": "Video Analysis",
          "editing": "Video Editing",
          "generation": "Video Generation"
        }
      },
      "spatial": {
        "title": "Spatial Model",
        "description": "Handles spatial perception, 3D mapping, and environmental awareness",
        "features": {
          "mapping": "3D Mapping",
          "localization": "Spatial Localization",
          "navigation": "Navigation"
        }
      },
      "sensor": {
        "title": "Sensor Model",
        "description": "Processes sensor data from various environmental and physical sensors",
        "features": {
          "data": "Sensor Data",
          "fusion": "Data Fusion",
          "monitoring": "Environmental Monitoring"
        }
      },
      "computer": {
        "title": "Computer Model",
        "description": "Controls computer systems, executes commands, and manages software",
        "features": {
          "control": "System Control",
          "automation": "Automation",
          "integration": "System Integration"
        }
      },
      "motion": {
        "title": "Motion Model",
        "description": "Controls actuators, handles robotics, and manages physical movement",
        "features": {
          "control": "Motion Control",
          "planning": "Path Planning",
          "execution": "Motion Execution"
        }
      },
      "knowledge": {
        "title": "Knowledge Model",
        "description": "Provides expert knowledge across multiple domains and disciplines",
        "features": {
          "retrieval": "Knowledge Retrieval",
          "reasoning": "Expert Reasoning",
          "learning": "Continuous Learning"
        }
      },
      "programming": {
        "title": "Programming Model",
        "description": "Generates code, debugs programs, and assists with software development",
        "features": {
          "coding": "Code Generation",
          "debugging": "Debugging",
          "optimization": "Performance Optimization"
        }
      }
    },
    
    "training": {
      "types": {
        "title": "Training Types",
        "individual": "Individual Training",
        "individual_desc": "Train a single model for specific task optimization",
        "joint": "Joint Training",
        "joint_desc": "Train multiple models together for improved collaboration",
        "continuous": "Continuous Training",
        "continuous_desc": "Ongoing training with new data for continuous improvement"
      },
      "best_practices": {
        "title": "Best Practices",
        "practice1": "Use high-quality, diverse training datasets",
        "practice2": "Monitor training progress and adjust parameters accordingly",
        "practice3": "Validate models with separate test datasets",
        "practice4": "Implement early stopping to prevent overfitting"
      }
    },
    
    "troubleshooting": {
      "voice_not_working": {
        "question": "Voice input not working",
        "answer": "Check microphone permissions and audio device settings"
      },
      "camera_access": {
        "question": "Camera access denied",
        "answer": "Grant camera permissions in system settings"
      },
      "model_not_responding": {
        "question": "Model not responding",
        "answer": "Restart the model or check system resources"
      },
      "training_failed": {
        "question": "Training failed to start",
        "answer": "Check dataset format and training parameters"
      },
      "performance_issues": {
        "question": "Performance issues",
        "answer": "Optimize system resources or reduce model complexity"
      },
      "connection_problems": {
        "question": "Connection problems",
        "answer": "Check network connectivity and API endpoints"
      }
    },
    
    "advanced": {
      "realtime": {
        "title": "Real-time Processing",
        "description": "Advanced real-time data streaming and processing capabilities"
      },
      "api": {
        "title": "API Integration",
        "description": "Comprehensive API support for external system integration"
      },
      "monitoring": {
        "title": "Advanced Monitoring",
        "description": "Detailed performance metrics and system health monitoring"
      },
      "integration": {
        "title": "System Integration",
        "description": "Seamless integration with external devices and services"
      }
    },
    
    "links": {
      "documentation": "Full Documentation",
      "community": "Community Forum",
      "contact": "Contact Support"
    },
    
"footer": {
  "license": "Apache License 2.0"
},

"categories": {
      "gettingStarted": "Getting Started",
      "models": "Model Management",
      "training": "Model Training",
      "integration": "System Integration",
      "troubleshooting": "Troubleshooting",
      "api": "API Interface",
      "faq": "FAQ"
    },
    
    "articles": {
      "install": "System Installation Guide",
      "firstSteps": "First Steps Guide",
      "modelTraining": "Model Training Tutorial",
      "commonErrors": "Common Error Resolution",
      "systemOverview": "System Architecture Overview",
      "modelManagement": "Model Management Guide",
      "apiIntegration": "API Integration Tutorial",
      "performanceOptimization": "Performance Optimization Guide",
      "securityBestPractices": "Security Best Practices",
      "maintenanceProcedures": "Maintenance Procedures"
    },
    
    "content": {
      "install": "<h3>System Installation Requirements</h3><p>Hardware Requirements:</p><ul><li>CPU: 8+ cores</li><li>Memory: 32GB+</li><li>GPU: NVIDIA RTX 3080+ (recommended)</li><li>Storage: 500GB SSD</li></ul><p>Software Requirements:</p><ul><li>Operating System: Windows 10/11, Linux Ubuntu 20.04+</li><li>Python: 3.8+</li><li>Node.js: 16+</li><li>Docker: 20.10+</li></ul><h3>Installation Steps</h3><ol><li>Download installation package or clone source code from GitHub</li><li>Run installation script: <code>./install.sh</code></li><li>Configure environment variables</li><li>Start system: <code>python main.py</code></li></ol>",
      
      "firstSteps": "<h3>First Steps Guide</h3><p>Welcome to the AGI Brain System! Here are the quick start steps:</p><ol><li><strong>System Initialization</strong>: First startup will automatically initialize all models</li><li><strong>Model Configuration</strong>: Configure model parameters in the model management page</li><li><strong>Training Data Preparation</strong>: Prepare training datasets</li><li><strong>Start Training</strong>: Use training control panel to start model training</li><li><strong>Monitor Progress</strong>: View training status in real-time through monitoring dashboard</li></ol><h3>Basic Operations</h3><ul><li>Main interface chat: Interact with AGI system via text or voice</li><li>Model switching: Support switching between local models and external API models</li><li>Multi-language support: Interface supports Chinese and English switching</li></ul>",
      
      "modelTraining": "<h3>Model Training Guide</h3><p>AGI Brain System supports multiple training modes:</p><h4>Individual Training</h4><ul><li>Select single model for specialized training</li><li>Suitable for model performance optimization and specific task training</li></ul><h4>Joint Training</h4><ul><li>Multiple models train collaboratively</li><li>Improve collaboration ability between models</li><li>Enhance overall system performance</li></ul><h3>Training Parameter Configuration</h3><ul><li>Training epochs: 10-1000</li><li>Batch size: 16-128</li><li>Learning rate: 0.0001-0.01</li><li>Validation split: 0.1-0.3</li></ul>",
      
      "commonErrors": "<h3>Common Error Resolution</h3><p>Common system errors and solutions:</p><h4>Model Loading Errors</h4><ul><li>Check model file paths and permissions</li><li>Verify model compatibility with current system version</li></ul><h4>Training Errors</h4><ul><li>Ensure sufficient memory and storage space</li><li>Check dataset format and integrity</li></ul><h4>Connection Errors</h4><ul><li>Verify network connectivity</li><li>Check API key validity</li></ul>",
      
      "systemOverview": "<h3>System Architecture Overview</h3><p>AGI Brain System consists of multiple interconnected modules:</p><h4>Core Modules</h4><ul><li>Manager Model: Coordinates all other models</li><li>Language Model: Natural language processing</li><li>Vision Model: Image and video processing</li><li>Audio Model: Sound processing and generation</li><li>Sensor Model: Environmental data processing</li><li>Knowledge Model: Expert knowledge base</li><li>Programming Model: Code generation and analysis</li></ul><h4>Support Modules</h4><ul><li>Training System: Model training and optimization</li><li>Monitoring System: Real-time performance tracking</li><li>Interface System: User interaction and visualization</li></ul>",
      
      "modelManagement": "<h3>Model Management Guide</h3><p>Comprehensive model management features:</p><h4>Model Types</h4><ul><li>Local Models: Run on local hardware</li><li>External API Models: Connect to cloud services</li><li>Hybrid Models: Combine local and external capabilities</li></ul><h4>Management Operations</h4><ul><li>Model loading and initialization</li><li>Parameter configuration and tuning</li><li>Performance monitoring and optimization</li><li>Version control and updates</li></ul>",
      
      "apiIntegration": "<h3>API Integration Tutorial</h3><p>External API integration guidelines:</p><h4>Supported APIs</h4><ul><li>OpenAI GPT models</li><li>Google Cloud AI services</li><li>Azure Cognitive Services</li><li>Amazon AWS AI services</li><li>Custom REST APIs</li></ul><h4>Integration Steps</h4><ol><li>Obtain API credentials and keys</li><li>Configure endpoint URLs</li><li>Set up authentication</li><li>Test connection</li><li>Configure model parameters</li></ol>",
      
      "performanceOptimization": "<h3>Performance Optimization Guide</h3><p>System performance optimization techniques:</p><h4>Hardware Optimization</h4><ul><li>GPU acceleration configuration</li><li>Memory management and allocation</li><li>Storage optimization for large datasets</li></ul><h4>Software Optimization</h4><ul><li>Model compression and quantization</li><li>Batch processing optimization</li><li>Caching strategies</li></ul>",
      
      "securityBestPractices": "<h3>Security Best Practices</h3><p>System security guidelines:</p><h4>Data Security</h4><ul><li>Encrypt sensitive data</li><li>Secure API key storage</li><li>Regular backup procedures</li></ul><h4>Network Security</h4><ul><li>Use secure connections (HTTPS)</li><li>Implement access controls</li><li>Monitor for suspicious activity</li></ul>",
      
  "maintenanceProcedures": "<h3>Maintenance Procedures</h3><p>Regular system maintenance tasks:</p><h4>Routine Maintenance</h4><ul><li>Update system components</li><li>Clean temporary files</li><li>Monitor system logs</li></ul><h4>Scheduled Tasks</h4><ul><li>Regular model retraining</li><li>Database optimization</li><li>Security audits</li></ul>"
    }
  },
  "knowledge": {
    "importTitle": "Knowledge Base File Import",
    "selectFiles": "Select Files",
    "supportedFormats": "Supported formats: JSON, TXT, PDF, DOCX",
    "dragDrop": "Drag and drop files here or click to browse",
    "maxFiles": "Maximum 10 files, 100MB each",
    "domainSelection": "Knowledge Domain Selection",
    "autoDetect": "Auto Detect",
    "domains": {
      "physics": "Physics",
      "mathematics": "Mathematics",
      "chemistry": "Chemistry",
      "medicine": "Medicine",
      "law": "Law",
      "history": "History",
      "sociology": "Sociology",
      "humanities": "Humanities",
      "psychology": "Psychology",
      "economics": "Economics",
      "management": "Management",
      "mechanical_engineering": "Mechanical Engineering",
      "electronic_engineering": "Electronic Engineering",
      "food_engineering": "Food Engineering",
      "chemical_engineering": "Chemical Engineering",
      "computer_science": "Computer Science",
      "artificial_intelligence": "Artificial Intelligence",
      "biology": "Biology",
      "geography": "Geography",
      "philosophy": "Philosophy",
      "literature": "Literature",
      "arts": "Arts",
      "education": "Education",
      "environmental_science": "Environmental Science",
      "materials_science": "Materials Science",
      "other": "Other"
    },
    "upload": "Upload",
    "uploading": "Uploading...",
    "processing": "Processing...",
    "importComplete": "Import Complete",
    "importFailed": "Import Failed",
    "statistics": "Import Statistics",
    "totalFiles": "Total Files",
    "successful": "Successful",
    "failed": "Failed",
    "totalSize": "Total Size",
    "processedContent": "Processed Content",
    "characters": "Characters",
    "words": "Words",
    "sentences": "Sentences",
    "paragraphs": "Paragraphs",
    "knowledgePoints": "Knowledge Points",
    "viewDetails": "View Details",
    "close": "Close",
    "tryAgain": "Try Again",
    "errorMessages": {
      "noFiles": "Please select at least one file",
      "fileTooLarge": "File size exceeds limit (100MB)",
      "tooManyFiles": "Too many files selected (max 10)",
      "unsupportedFormat": "Unsupported file format",
      "uploadFailed": "File upload failed",
      "processingError": "File processing error",
      "connectionError": "Connection error",
      "serverError": "Server error"
    },
    "successMessages": {
      "importSuccessful": "Import successful",
      "filesProcessed": "{count} files processed successfully",
      "knowledgeEnhanced": "Knowledge base enhanced with new content"
    }
  },
  "home": {
    "welcome": "Welcome",
    "modelStatus": "Model Status",
    "performance": "Performance",
    "conversation": "Conversation",
    "typeMessage": "Type message...",
    "send": "Send",
    "recording": "Recording...",
    "voiceInput": "Voice Input",
    "imageInput": "Image Input",
    "hideRealtime": "Hide Real-time Input",
    "showRealtime": "Show Real-time Input",
    "quickActions": "Quick Actions",
    "welcomeMessage": "Welcome to the AGI Brain System! I am your intelligent assistant and can help you with various tasks.",
    "backendConnected": "Backend service connected successfully",
    "voiceRecognitionStarted": "Voice recognition started, please start speaking...",
    "voiceRecognitionSimulating": "Voice recognition simulating...",
    "uploadingImage": "Uploading image"
  },
  "guide": {
    "showGuide": "Show Guide"
  },
  "error": {
    "loadMessagesFailed": "Failed to load historical messages",
    "backendConnectionFailed": "Failed to connect to backend service",
    "processingFailed": "Failed to process message",
    "voiceRecognitionFailed": "Voice recognition failed",
    "imageInputNotFound": "Image input element not found",
    "fileTooLarge": "File too large, please select a file smaller than 5MB",
    "imageUploadFailed": "Image upload failed"
  },
  "mock": {
    "responsePrefix": "Received your message",
    "imageResponse": "Image received, analyzing...",
    "defaultResponse": "Your input received, processing...",
    "voiceRecognitionResult": "This is a simulated voice recognition result"
  }
}
