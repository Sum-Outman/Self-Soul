{
  "main": {
    "title": "AGI Brain System",
    "tabs": {
      "interaction": "Interaction",
      "training": "Training",
      "management": "Management",
      "settings": "Settings",
      "help": "Help",
      "monitor": "Monitor",
      "knowledge": "Knowledge"
    },
    "status": {
      "system": "System Status",
      "connected": "Connected",
      "disconnected": "Disconnected",
      "error": "Error"
    },
    "connectionStatus": "Connection Status",
    "trainingInProgress": "Training in Progress"
  },
  "common": {
    "loading": "Loading..."
  },
  "language": {
    "chinese": "Chinese",
    "english": "English",
    "german": "German",
    "japanese": "Japanese",
    "russian": "Russian",
    "switchLanguage": "Switch Language"
  },
  "interaction": {
    "title": "Intelligent Dialogue",
    "placeholder": "Please enter your question or command...",
    "voiceInput": "Voice Input",
    "send": "Send",
    "clear": "Clear",
    "emotionAnalysis": "Emotion Analysis",
    "multimodalInput": "Multimodal Input",
    "voice": "Voice",
    "listening": "Listening",
    "camera": "Camera",
    "recording": "Recording",
    "sensors": "Sensors",
    "active": "Active",
    "cameraFeed": "Camera Feed",
    "sensorData": "Sensor Data",
    "modelControl": "Model Control",
    "startCollaboration": "Start Collaboration"
  },
    "training": {
        "title": "Training Control Panel",
        "trainingMode": "Training Mode",
        "individual": "Individual Training",
        "joint": "Joint Training",
        "selectModels": "Select Models for Training",
        "recommendedCombinations": "Recommended Combinations",
        "combinationValid": "Combination validated",
        "dependencies": "Model Dependencies",
        "trainingStrategy": "Training Strategy",
        "trainingOptions": "Training Options",
        "strategy": "Strategy",
        "strategyStandard": "Standard Strategy",
        "strategyKnowledge": "Knowledge Strategy",
        "strategyProgressive": "Progressive Strategy",
        "strategyAdaptive": "Adaptive Strategy",
        "knowledgeAssist": "Knowledge Assist",
        "knowledgeAssistOptions": "Knowledge Assist Options",
        "domainKnowledge": "Domain Knowledge",
        "commonSense": "Common Sense",
        "proceduralKnowledge": "Procedural Knowledge",
        "contextualLearning": "Contextual Learning",
        "knowledgeIntensity": "Knowledge Intensity",
        "dataset": "Dataset",
        "uploadDataset": "Upload Dataset",
        "parameters": "Parameters",
        "epochs": "Epochs",
        "batchSize": "Batch Size",
        "learningRate": "Learning Rate",
        "validationSplit": "Validation Split",
        "startTraining": "Start Training",
        "trainingInProgress": "Training in Progress",
        "stopTraining": "Stop Training",
        "progress": "Progress",
        "logs": "Logs",
        "evaluation": "Evaluation",
        "accuracy": "Accuracy",
        "loss": "Loss",
        "precision": "Precision",
        "recall": "Recall",
        "confusionMatrix": "Confusion Matrix",
        "history": "History",
        "date": "Date",
        "models": "Models",
        "duration": "Duration",
        "actions": "Actions",
        "view": "View",
        "compare": "Compare",
        "trainingCompleted": "Training completed successfully",
        "trainingStopped": "Training stopped",
        "trainingTime": "Training Time",
        "performanceMetrics": "Performance Metrics",
        "loadRecommendations": "Load Recommendations",
        "datasets": {
            "multimodal_v1": "Multimodal Dataset v1",
            "language_only": "Language Only Dataset",
            "vision_only": "Vision Only Dataset",
            "sensor_only": "Sensor Only Dataset"
        },
        "strategies": {
            "standard": "Standard Strategy",
            "knowledge_assisted": "Knowledge Assisted Strategy",
            "progressive": "Progressive Strategy",
            "adaptive": "Adaptive Strategy"
        },
        "combinations": {
            "basic_interaction": "Basic Interaction Combination",
            "visual_processing": "Visual Processing Combination",
            "sensor_analysis": "Sensor Analysis Combination",
            "knowledge_intensive": "Knowledge Intensive Combination",
            "specialized_domains": "Specialized Domains Combination",
            "emotional_intelligence": "Emotional Intelligence Combination",
            "complete_system": "Complete System Combination",
            "autonomous_control": "Autonomous Control Combination",
            "cognitive_processing": "Cognitive Processing Combination",
            "multimodal_perception": "Multimodal Perception Combination"
        },
        "selectAllModels": "Select All Models",
        "allModelsSelected": "All available models have been selected.",
        "requiresModels": "Requires models: {models}",
        "missingDependencies": "Missing dependencies: {details}",
        "websocketConnected": "WebSocket connection established",
        "websocketDisconnected": "WebSocket connection disconnected",
        "trainingStarted": "Training started - Mode: {mode}, Models: {models}, Dataset: {dataset}",
        "epochCompleted": "Epoch completed - Epoch: {epoch}, Loss: {loss}, Accuracy: {accuracy}%",
        "datasetUploadSuccess": "Dataset uploaded successfully: {name}",
        "dropoutRate": "Dropout Rate",
        "weightDecay": "Weight Decay",
        "momentum": "Momentum",
        "optimizer": "Optimizer",
        "modelListFetchFailed": "Failed to fetch model list",
        "availableModelsFetchFailed": "Failed to fetch available models",
        "fallbackModelUsed": "System is using fallback models since API is unavailable. Some features may be limited.",
        "continueWithFallbackData": "You can continue using the training function. The system will use built-in model lists and mock data."
    },
  "management": {
    "title": "Model Management",
    "localModels": "Local Models",
    "externalModels": "External API Models",
    "configure": "Configure",
    "testConnection": "Test Connection",
    "addExternalModel": "Add External Model",
    "status": "Status",
    "active": "Active",
    "inactive": "Inactive",
    "disable": "Disable",
    "enable": "Enable",
    "localConfig": "Local Configuration",
    "modelVersion": "Model Version",
    "enterVersion": "Enter version",
    "trainingDataPath": "Training Data Path",
    "enterDataPath": "Enter data path",
    "externalConfig": "External Configuration",
    "externalModel": "External Model",
    "modelName": "Model Name",
    "enterModelName": "Enter model name",
    "apiEndpoint": "API Endpoint",
    "enterApiEndpoint": "Enter API endpoint",
    "apiKey": "API Key",
    "enterApiKey": "Enter API key",
    "modelType": "Model Type",
    "custom": "Custom",
    "saveConfig": "Save Configuration",
    "delete": "Delete",
    "enableThisModel": "Enable this model",
    "noExternalModels": "No external models",
    "connectionSuccess": "Connection successful",
    "connectionFailed": "Connection failed",
    "connectionError": "Connection error",
    "configSaved": "Configuration saved",
    "disconnected": "Disconnected",
    "testing": "Testing",
    "connected": "Connected",
    "failed": "Failed",
    "error": "Error",
    "unknown": "Unknown",
    "memoryUsage": "Memory Usage",
    "cpuUsage": "CPU Usage",
    "lastActivity": "Last Activity",
    "loadedTime": "Loaded Time",
    "neverActive": "Never Active",
    "justNow": "Just Now",
    "minutesAgo": "minutes ago",
    "hoursAgo": "hours ago",
    "notLoaded": "Not Loaded",
    "initialized": "Initialized",
    "yes": "Yes",
    "no": "No",
    "trainingStatus": "Training Status",
    "training": "Training",
    "idle": "Idle",
    "fetchingStatus": "Fetching model status...",
    "statusUpdated": "Status updated successfully",
    "statusFetchFailed": "Failed to fetch status",
    "endpointRequired": "API endpoint is required",
    "testingConnection": "Testing connection...",
    "nameAndEndpointRequired": "Model name and endpoint are required",
    "savingConfig": "Saving configuration..."
  },
  "settings": {
    "title": "System Settings",
    "modelConfig": "Model Configuration",
    "localModel": "Local Model",
    "apiModel": "API Model",
    "apiUrl": "API URL",
    "apiKey": "API Key",
    "testConnection": "Test Connection",
    "systemSettings": "System Settings",
    "dataRetention": "Data Retention",
    "days": "days",
    "autoUpdate": "Auto Update",
    "logLevel": "Log Level",
    "save": "Save Settings",
    "saved": "Settings saved successfully",
    "savedMsg": "Model configuration saved successfully",
    "setPrimaryFailed": "Failed to set primary model",
    "modelNotConnected": "Model not connected",
    "connectionError": "Connection error",
    "unknownError": "Unknown error",
    "saveFailed": "Save failed",
    "saveFailedMsg": "Error saving settings",
    "usingMockModels": "Using mock model data",
    "loadFailed": "Loading failed",
    "primaryModelSet": "Primary model set",
    "primaryModelSetMsg": "{model} has been set as primary model",
    "modelActivated": "Model activated",
    "modelActivatedMsg": "Model {model} has been successfully activated",
    "modelDeactivated": "Model deactivated",
    "modelDeactivatedMsg": "Model {model} has been successfully deactivated",
    "modelStarted": "Model started",
    "modelStartedMsg": "Model {model} has been successfully started",
    "addModelFailed": "Failed to add model",
    "modelStopped": "Model stopped",
    "modelStoppedMsg": "Model {model} has been successfully stopped",
    "modelRestarted": "Model restarted",
    "modelRestartedMsg": "Model {model} has been successfully restarted",
    "startingAllActiveModels": "Starting all active models",
    "stoppingAllRunningModels": "Stopping all running models",
    "restartingAllModels": "Restarting all models",
    "confirmRestartSystem": "Are you sure you want to restart the entire system? This will affect the running status of all models.",
    "fillRequiredFields": "Please fill in Model ID and Model Name",
    "fillApiFields": "Please fill in all API fields",
    "connectionSuccess": "Connection successful",
    "connectionFailed": "Connection failed",
    "saveFailed": "Save failed",
    "general": "General Settings",
    "audio": "Audio Settings",
    "video": "Video Settings",
    "sensors": "Sensor Settings",
    "reset": "Reset to Default",
    "loading": "Loading...",
    "addNewModel": "Add New Model",
    "modelId": "Model ID",
    "modelIdPlaceholder": "Enter unique model ID",
    "modelName": "Model Name",
    "modelNamePlaceholder": "Enter model name",
    "addModel": "Add Model",
    "noModels": "No models available",
    "addFirstModelHint": "Please add your first model to get started",
    "saving": "Saving...",
    "savingFailed": "Save failed",
    "saveFailedMsg": "Failed to save model configuration",
    "addModelFailed": "Add model failed",
    "modelIdExists": "Model ID already exists",
    "addModelFailedMsg": "Failed to add model",
    "modelAdded": "Model added successfully",
    "modelAddedMsg": "Model {model} added successfully",
    "modelRemoved": "Model removed successfully",
    "modelRemovedMsg": "Model {model} has been removed",
    "removeModelFailed": "Remove model failed",
    "removeModelFailedMsg": "Failed to remove model",
    "confirmRemove": "Are you sure you want to remove model '{model}'?",
    "activate": "Activate",
    "deactivate": "Deactivate",
    "toggleStatusFailed": "Toggle status failed",
    "toggleStatusFailedMsg": "Failed to toggle model status",
    "modelActivated": "Model activated",
    "modelActivatedMsg": "Model {model} has been activated",
    "modelDeactivated": "Model deactivated",
    "modelDeactivatedMsg": "Model {model} has been deactivated",
    "connecting": "Connecting...",
    "connectionSuccessMsg": "Model {model} connected successfully",
    "connectionFailedMsg": "Cannot connect to model service",
    "useAsPrimary": "Use as primary",
    "primaryModelSet": "Primary model set",
    "primaryModelSetMsg": "{model} has been set as primary model",
    "invalidUrl": "Invalid URL format",
    "lastTested": "Last tested",
    "localModelPath": "Local model path",
    "loadFailed": "Failed to load model configuration",
    "usingMockModels": "Using mock data for demonstration",
    "localModelPathPlaceholder": "Enter local model path",
    "modelVersion": "Model version",
    "modelType": "Model type",
    "apiEndpoint": "API endpoint",
    "apiKeyPlaceholder": "Enter API key",
    "statistics": "Model Statistics",
    "totalModels": "Total Models",
    "activeModels": "Active Models",
    "apiModels": "API Models",
    "connectedModels": "Connected Models",
    "modelStatus": "Model Status",
    "performance": "Performance",
    "cpuUsage": "CPU Usage",
    "memoryUsage": "Memory Usage",
    "startAllModels": "Start All Models",
    "stopAllModels": "Stop All Models",
    "restartAllModels": "Restart All Models",
    "modelList": "Model List",
    "statusLabel": "Status",
    "modelStarted": "Model started",
    "modelStartedMsg": "Model {model} has been started",
    "startModelFailed": "Start model failed",
    "startModelFailedMsg": "Failed to start model",
    "modelStopped": "Model stopped",
    "modelStoppedMsg": "Model {model} has been stopped",
    "stopModelFailed": "Stop model failed",
    "stopModelFailedMsg": "Failed to stop model",
    "modelRestarted": "Model restarted",
    "modelRestartedMsg": "Model {model} has been restarted",
    "restartModelFailed": "Restart model failed",
    "restartModelFailedMsg": "Failed to restart model",
    "confirmRestartSystem": "Are you sure you want to restart the entire system? This will restart all models.",
    "systemRestarted": "System Restarted",
    "systemRestartedMsg": "System and all models have been restarted",
    "systemRestartFailed": "System Restart Failed",
    "systemRestartFailedMsg": "Failed to restart system, please try again later",
    "showSettings": "Show Settings",
    "hideSettings": "Hide Settings",
    "statusLabel": "Status",
    "status": {
      "connected": "Connected",
      "disconnected": "Disconnected",
      "testing": "Testing",
      "failed": "Failed",
      "running": "Running",
      "stopped": "Stopped",
      "active": "Active"
    },
    "start": "Start",
    "stop": "Stop",
    "restart": "Restart",
    "restartSystem": "Restart System",
    "active": "Active",
    "inactive": "Inactive",
    "local": "Local",
    "external": "External",
    "remove": "Remove",
    "responseTime": "Response Time",
    "cpu": "CPU",
    "memory": "Memory"
  },
  "knowledge": {
    "loadStatsFailed": "Failed to load knowledge statistics:",
    "loadFilesFailed": "Failed to load file list:",
    "searchKnowledgeFailed": "Search knowledge failed:",
    "usingMockStats": "Using local mock statistics, API connection abnormal.",
    "usingMockFiles": "Using local mock file list, API connection abnormal.",
    "usingMockSearch": "Using mock search results, API connection abnormal."
  },
  "models": {
    "A": "Manager Model",
    "B": "Language Model",
    "C": "Audio Model",
    "D": "Vision Model (Image)",
    "E": "Vision Model (Video)",
    "F": "Spatial Model",
    "G": "Sensor Model",
    "H": "Computer Control Model",
    "I": "Motion Control Model",
    "J": "Knowledge Model",
    "K": "Programming Model",
    "L": "Planning Model",
    "M": "Autonomous Model",
    "N": "Collaboration Model",
    "O": "Finance Model",
    "P": "Medical Model",
    "Q": "Optimization Model",
    "R": "Prediction Model",
      "S": "Emotion Model"
  },
  "errors": {
    "websocketConnectionFailed": "WebSocket connection failed: {error}",
    "modelsFallback": "System is using fallback models since API is unavailable. Some features may be limited."
  },
  "home": {
    "welcomeMessage": "Welcome to the AGI Brain System. You can interact with the system and use various functions.",
    "modelConnectionStatus": "Model Connection Status",
    "managementModel": "Management Model",
    "connectedText": "Connected",
    "activeModels": "Active Models: {count}",
    "disconnectedText": "Disconnected",
    "connectingText": "Connecting...",
    "allModelsActivated": "All models activated",
    "backendConnected": "Backend service connected",
    "processingMessage": "Processing message...",
    "fallbackToMock": "System is using mock data as API connection is abnormal",
    "confirmClearMessages": "Are you sure you want to clear all messages?",
    "voiceRecognitionStarted": "Voice recognition started",
    "uploadingVideo": "Uploading video...",
    "processingImage": "Processing image...",
    "conversation": "Conversation",
    "clearAllMessages": "Clear all messages",
    "typeMessage": "Type message",
    "send": "Send",
    "voiceInput": "Voice input",
    "stopVoiceInput": "Stop voice input",
    "modelActivated": "Model activated",
    "modelDeactivated": "Model deactivated",
    "imageInput": "Image input",
    "videoInput": "Video input",
    "showRealtime": "Show realtime data"
  }
}
